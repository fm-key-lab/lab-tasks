version: '3'

vars:
  DEFAULT_PYTHON_MODULE: python-waterboa/2024.06
  RPM: /usr/bin/rpm

includes:
  envmodule:
    taskfile: ./EnvironmentModules.yml
    internal: true

tasks:
  vanilla-build:
    vars:
      # Can use a custom status check
      STATUS: '{{.STATUS | default "-x {{.BUILD_DIR}}/bin/{{.APP}}"}}'
    dir: '{{.BUILD_DIR}}'
    prompt: Build in {{.BUILD_DIR}}?
    cmds:
      - wget {{.URL}}
      - defer: rm -f $(basename {{.URL}})
      - tar xf $(basename {{.URL}})
      - |
        cd {{.APP}}-{{.VERSION}}
        ./configure --prefix={{.BUILD_DIR}}
        make
        make install
    requires:
      vars: [APP, BUILD_DIR, URL, VERSION]
    status:
      - test {{.STATUS}}

  check-package-installed:
    silent: true
    cmds:
      - /usr/bin/rpm -qa | grep -q {{.PACKAGE}} || { echo "{{.PACKAGE}} is not installed."; exit 1; }
    requires:
      vars: [PACKAGE]

  # Adapted from soedinglab/MMseqs2/wiki#check-system-requirements-under-linux
  check-system-requirements: |
    [ $(uname -m) = "x86_64" ] && echo "64bit: Yes" || echo "64bit: No"
    grep -q avx2 /proc/cpuinfo && echo "AVX2: Yes" || echo "AVX2: No"
    grep -q sse4_1 /proc/cpuinfo && echo "SSE4.1: Yes" || echo "SSE4.1: No"
    grep -q sse2 /proc/cpuinfo && echo "SSE2: Yes" || echo "SSE2: No"

  create-install-taskfile-stub:
    desc: Create stub for a software install Taskfile.
    vars:
      PYTHON_MODULE: '{{.PYTHON_MODULE | default .DEFAULT_PYTHON_MODULE}}'
      STUB_DIR: '{{.STUB_DIR | default ""}}'
    dir: '{{.STUB_DIR}}'
    cmds:
      - task: envmodule:run-inside
        vars:
          CMDS: |
            python {{.ROOT_DIR}}/scripts/write_software_task_stub.py \
              {{.STUB_DIR}} \
              --APP {{.APP}} \
              --VERSION {{.VERSION}}
          MODULE: '{{.PYTHON_MODULE}}'
    requires:
      vars: [APP, VERSION]
    generates:
      - ./{{.APP}}.yml
    status:
      - test -f ./{{.APP}}.yml
